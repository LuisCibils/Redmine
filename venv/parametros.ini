# El propósito del programa es crear peticiones en REDEMINE a partir de datos desde una planilla Excel
# La información en la planilla debe estar configurada de la siguiente forma:
# Hoja 1:
#       celda A1: "Proyecto" (es un dato opcional, el programa no lo controla)
#       celda B1: nombre del proyecto Redmine, tal como figura en Redmine
#       celda A2: "Tipo" (es un dato opcional, es para indicar que a continuación se pone el tipo de petición)
#       celda B2: nombre del tipo de petición, tal como figura en Redmine
#       celda A3: "campos configurados" (es un dato opcional), sólo indica que a continuación vienen los custom fields
#               Se deben listar todos los campos configurados que requiere la petición a crear
#       celda A4 en adelante: Nombre del campo configurado, tal como figura en Redmine
#       cekda B4 en adelante: Id del campo configurado correspondiente a la celda Ax (esto implica ver en la BD de Redmine)
# Hoja 2:
#       En la primera fila, todos los nombres de los campos a crear en la petición, tal como figuran en Redmine
#       En las filas siguientes, la lista de los campos para cada petición
#       Los valores de los campos deben ser válidos según lo que se especifica en [Configuración de campos] más abajo.

# Especificación de parámetos:
#-----------------------------

# el programa se ejecuta:
# python excel.py parametros.ini planilla.xlsx

# parametros.ini : este archivo
# planilla.xlsx: la planilla Excel que contiene los datos de las peticiones a cargar
# en caso que los archivos de parametros o la planilla excel no estén en el mismo directorio, hay que agregar el path

# Nota: todos los valores de texto van entre comillas dobles ""

[Parametros del sistema]

url = "https://colo1.msp.gub.uy/redmine/"
token = "7912b4cc1a85bbc3f0f8637bac2329d80a1a66a9"

# Modo de operación puede ser:'Carga': valida todos los campos y luego los carga, o 'Validación': en este último caso, sólo valida
#Modo de operación = "Carga"
Modo de operación = "Validación"

# Nota: los nombres de los campos deben figurar idénticos a como se muestran en la petición
# la configuración general de un campo es:
#   'fieldname': {'required': 'yes|no', 'type': 'id|date|text|int|0-100|file|issue', 'id': 'keyname'}
#   el campo 'id' sólo cuando el type es 'id', es decir, referencia a una lista ya predefinida en Redmine
# si no se incluye la configuración de campos, se asume una por defecto

[Configuración de campos]
Asunto: '{"required": "yes", "type": "text"}'
Descripción: '{"required": "yes", "type": "text"}'
Estado: '{"required": "yes", "type": "id", "id": "status"}'
Prioridad: '{"required": "no", "type": "id", "id": "priority"}'
Asignado a:'{"required": "no", "type": "id", "id": "user"}'
Categoría: '{"required": "yes", "type": "id", "id": "category"}'
Fecha de inicio: '{"required": "no", "type": "date"}'
Fecha fin: '{"required": "no", "type": "date"}'
Ficheros: '{"required": "no", "type": "file"}'
Tarea padre: '{"required": "no", "type": "issue"}'
Tiempo estimado: '{"required": "no", "type": "int"}'
% Realizado: '{"required": "no", "type": "0-100"}'
